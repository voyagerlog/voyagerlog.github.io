@use "share-px-val"as *;
@use "rem-calc" as *;
@use "color" as *;

@function get-shadow($step:0, $color:black, $intensity-multiplier:1) {
  $box-shadow-props: ();

  @if ($step==0) {
    $box-shadow-props: 0 0 0 get-color($color, 0, 0 * $intensity-modifier);
  }

  @if ($step==1) {
    $box-shadow-props: 0 0 set-px(2) get-color($color, -5, 05 * $intensity-multiplier);
  }

  @if ($step==2) {
    $box-shadow-props: 0 0 set-px(2) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==3) {
    $box-shadow-props: 0 0 set-px(4) get-color($color, -5, 15 * $intensity-multiplier);
  }

  @if ($step==4) {
    $box-shadow-props: 0 set-px(2) set-px(3) get-color($color, -5, 15 * $intensity-multiplier),
      0 set-px(0) set-px(2) get-color($color, -5, 10 * $intensity-multiplier);
  }

  @if ($step==5) {
    $box-shadow-props: 0 set-px(3) set-px(3) get-color($color, -5, 17 * $intensity-multiplier),
      0 set-px(0) set-px(2) get-color($color, -5, 10 * $intensity-multiplier);
  }

  @if ($step==6) {
    $box-shadow-props: 0 set-px(4) set-px(4) get-color($color, -5, 17 * $intensity-multiplier),
      0 set-px(0) set-px(2) get-color($color, -5, 10 * $intensity-multiplier);
  }

  @if ($step==7) {
    $box-shadow-props: 0 set-px(5) set-px(6) get-color($color, -5, 17 * $intensity-multiplier),
      0 set-px(0) set-px(2) get-color($color, -5, 10 * $intensity-multiplier);
  }

  @if ($step==8) {
    $box-shadow-props: 0 set-px(6) set-px(6) get-color($color, -5, 19 * $intensity-multiplier),
      0 set-px(0) set-px(3) get-color($color, -5, 10 * $intensity-multiplier);
  }

  @if ($step==9) {
    $box-shadow-props: 0 set-px(7) set-px(8) get-color($color, -5, 19 * $intensity-multiplier),
      0 set-px(0) set-px(3) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==10) {
    $box-shadow-props: 0 set-px(8) set-px(9) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(3) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==11) {
    $box-shadow-props: 0 set-px(10) set-px(12) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(3) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==12) {
    $box-shadow-props: 0 set-px(13) set-px(14) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(5) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==13) {
    $box-shadow-props: 0 set-px(15) set-px(18) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(5) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==14) {
    $box-shadow-props: 0 set-px(17) set-px(20) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(5) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==15) {
    $box-shadow-props: 0 set-px(20) set-px(22) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(5) get-color($color, -5, 12 * $intensity-multiplier);
  }

  @if ($step==16) {
    $box-shadow-props: 0 set-px(26) set-px(27) get-color($color, -5, 20 * $intensity-multiplier),
      0 set-px(0) set-px(7) get-color($color, -5, 14 * $intensity-multiplier);
  }

  @if ($step==17) {
    $box-shadow-props: 0 set-px(30) set-px(40) get-color($color, -5, 22 * $intensity-multiplier),
      0 set-px(0) set-px(7) get-color($color, -5, 14 * $intensity-multiplier);
  }

  @if ($step==18) {
    $box-shadow-props: 0 set-px(40) set-px(45) get-color($color, -5, 22 * $intensity-multiplier),
      0 set-px(2) set-px(9) get-color($color, -5, 16 * $intensity-multiplier);
  }

  @if ($step==19) {
    $box-shadow-props: 0 set-px(41) set-px(65) get-color($color, -5, 22 * $intensity-multiplier),
      0 set-px(2) set-px(9) get-color($color, -5, 19 * $intensity-multiplier);
  }

  @if ($step==20) {
    $box-shadow-props: 0 set-px(45) set-px(75) get-color($color, -5, 22 * $intensity-multiplier),
      0 set-px(3) set-px(10) get-color($color, -5, 19 * $intensity-multiplier);
  }

  @return $box-shadow-props;
}

@mixin set-standard-shadow($step:0, $color:black, $intensity-multiplier:1) {
  box-shadow: get-shadow($step, $color, $intensity-multiplier);
}

@mixin set-interactive-shadow($step:0, $color:black, $intensity-multiplier:1, $border-radius:0, $animation-speed:175ms, $animation-type:ease-in) {
  position: relative;
  box-sizing: border-box;

  &:after {
    @include share-px-value(top, right, bottom, left, 0);
    border-radius: set-px($border-radius);
    box-shadow: get-shadow($step, $color, $intensity-multiplier);
    content: '';
    opacity: 0;
    position: absolute;
    transition: opacity $animation-speed $animation-type;
  }

  &:focus,
  &:hover {

    &:after {
      opacity: 1;
    }
  }

  &:active {
    &:after {
      opacity: 0;
    }
  }
}